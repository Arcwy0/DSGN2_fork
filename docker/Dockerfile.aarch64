FROM nvcr.io/nvidia/l4t-pytorch:r35.2.1-pth2.0-py3

# Install dependencies

#Set docker container username
ARG USER=dsgn2
ARG UID=1001
ARG GID=1001
ARG PW=user 
ARG DEBIAN_FRONTEND=noninteractive
RUN useradd -m ${USER} --uid=${UID} && echo "${USER}:${PW}" | chpasswd

RUN apt-get update && apt-get install -y \
        wget vim usbutils \
        libgl1 build-essential ca-certificates ccache autoconf bc \
        cmake curl libjpeg-dev libpng-dev libboost-dev libopenmpi-dev \
        iputils-ping libbz2-dev \
        &&  apt install -y protobuf-compiler \
        && rm -rf /var/lib/apt/lists/*
# Some libs from forum Jetson, don't know if they are necessary
# libc++-dev libcgal-dev libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblzma-dev \
#        libncurses5-dev libncursesw5-dev libpng-dev libreadline-dev libssl-dev libsqlite3-dev libxml2-dev libxslt-dev \
#        locales moreutils openssl python-openssl rsync scons \
# Environment variables for pytorch rebuild
RUN export patch_cuda=/usr/local/cuda-11.4 
ENV CUDA_HOME="/usr/local/cuda"
ENV PATH="/usr/local/cuda/bin:${PATH}"
ENV USE_CUDA=1
ENV USE_NCCL=0
ENV USE_NNPACK=1
ENV USE_DISTRIBUTED=1
ENV USE_QNNPACK=0
ENV USE_PYTORCH_QNNPACK=0
ENV USE_FBGEMM=1
ENV USE_NUMPY=1
ARG TORCH_CUDA_ARCH_LIST=5.3;6.1;6.2;7.2;8.7
RUN export TORCH_CUDA_ARCH_LIST='7.2+PTX'
ENV THCudaCheck = C10_CUDA_CHECK
ENV FORCE_CUDA="1"
ENV PATH="${PATH}:/home/${USER}/.local/bin"
RUN export OPENBLAS_CORETYPE=ARMV8
ENV PATH="${PATH}:/usr/local/bin/cmake"
ENV PATH="${PATH}:/usr/include/boost"
RUN export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}
RUN export LD_LIBRARY_PATH=/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
RUN echo "export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}" >> ~/.bashrc &&\
    echo "export LD_LIBRARY_PATH=/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}" >> ~/.bashrc
RUN export CUDA_NVCC_EXECUTABLE=$(which nvcc)
ARG CUDA_CHANNEL=nvidia
ARG INSTALL_CHANNEL=pytorch-nightly
RUN export _GLIBCXX_USE_CXX11_ABI=1

# Install PyTorch
RUN git clone --recursive --branch v2.0.1 https://github.com/pytorch/pytorch
RUN cd pytorch && pip3 install -r requirements.txt
# From Jetson forum: https://forums.developer.nvidia.com/t/pytorch-for-jetson/72048/1321
RUN pip3 install scikit-build
RUN pip3 install ninja
RUN export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
RUN pip3 uninstall torch
RUN pip3 uninstall torch
RUN cd pytorch && python3 setup.py develop && python3 -c "import torch"
RUN cd pytorch && python3 setup.py bdist_wheel
RUN cd pytorch && pip3 install dist/*.whl


# if libgl1 won't help, install ffmpeg libsm6 libxext6
WORKDIR /home/${USER}
USER root
RUN cd /home/${USER} && chown -R ${UID}:${GID} ./
USER ${UID}:${GID}

RUN pip3 install -U --no-cache-dir protobuf3
RUN pip3 install -U --no-cache-dir numpy \
&& pip3 install -U --no-cache-dir matplotlib
RUN pip3 install -U --no-cache-dir pycocotools \
&& pip3 install -U openmim
RUN mim install mmcv-full
# Install DSGN++
# https://github.com/chenyilun95/DSGN2 https://github.com/Arcwy0/DSGN2_fork
RUN git clone https://github.com/Arcwy0/DSGN2_fork --branch main
RUN cd DSGN2_fork/mmdetection-v2.22.0/ && pip3 install -e .

# Install cmake v3.26.4
USER root
RUN apt-get update && apt update && apt install libboost-dev -y \
        && rm -rf /var/lib/apt/lists/*
# RUN echo "export PATH=/usr/local/bin/cmake:$PATH" >> ~/.bashrc
# RUN echo "export PATH=/usr/include/boost:$PATH" >> ~/.bashrc
# RUN source ~/.bashrc
USER ${UID}:${GID}
# RUN git clone https://github.com/traveller59/spconv --recursive \
#         && cd spconv \
#         && git reset --hard f22dd9 \
#         && git submodule update --recursive
# ENV DEBIAN_FRONTEND noninteractive
RUN git clone https://github.com/Arcwy0/spconv121_torch200.git
RUN cd ./spconv121_torch200/third_party/ && git clone --recurse-submodules https://github.com/pybind/pybind11.git
RUN cd ./spconv121_torch200 && python3 setup.py bdist_wheel
RUN cd ./spconv121_torch200/dist && ls && pip3 install spconv-1.2.1-cp38-cp38-linux_aarch64.whl
# Install spconv v1.0
# RUN cd /home/${USER}
# RUN git clone https://github.com/traveller59/spconv.git --recursive
# RUN cd ./spconv && git checkout 8da6f967fb9a054d8870c3515b1b44eca2103634 && python3 setup.py bdist_wheel
# RUN pip3 install -U --no-cache-dir /root/spconv/dist/spconv-1.0-cp36-cp36m-linux_x86_64.whl && \
#     rm -rf /root/spconv
USER ${UID}:${GID}
RUN cd /home/${USER}
SHELL ["/bin/bash", "-l", "-c"]
RUN pip3 install -U Cython
RUN pip3 install -U --no-cache-dir numba
RUN cd /home/${USER}/DSGN2_fork/ && pip3 install -r requirements.txt && CFLAGS="-fopenmp" pip3 install -e .
# RUN cd /home/${USER}/DSGN2_fork/ && pip3 install -r requirements.txt && pip3 install -e .
# RUN cd /home/${USER}/DSGN2_fork/ && pip3 install -e .

RUN cd /home/${USER}/
