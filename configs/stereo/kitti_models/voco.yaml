# The final model config.
# use ImageNet pretrained weights to initilize conv1 to conv3
# with imitation loss
# with 2d detection head


CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']

DATA_CONFIG: 
    _BASE_CONFIG_: ./configs/stereo/dataset_configs/kitti_dataset_fused.yaml
    later_flip: True
    debug: &debug False
    DATA_SPLIT: {
        'train': train,
        'test': val
    }

    INFO_PATH: {
        'train': [kitti_infos_train.pkl],
        'test': [kitti_infos_val.pkl],
    }

    TRAIN_DATA_AUGMENTOR:
        -   NAME: gt_sampling
            ratio: 0.9
            USE_ROAD_PLANE: True
            DB_INFO_PATH:
                - stereo_kitti_dbinfos_train.pkl
            PREPARE: {
                filter_by_min_points: ['Car:5', 'Pedestrian:5', 'Cyclist:5'],
                filter_by_difficulty: [-1],
            }

            SAMPLE_GROUPS: ['Car:7','Pedestrian:7', 'Cyclist:7']
            NUM_POINT_FEATURES: 4
            DATABASE_WITH_FAKELIDAR: False
            REMOVE_EXTRA_WIDTH: [0.0, 0.0, 0.0]
            LIMIT_WHOLE_SCENE: True

        -   NAME: sparsify_lidar # not for testing 
            PROB: 1.
            H: &sparseh 64
            W: &sparsew 1024
            NUM_BEAMS: &sparsebeams [48, 64]
            RANDOM_SELECT: True
            COMPLETION_POINTS: &completion_points left

        -   NAME: random_flip

        -   NAME: random_crop
            MIN_REL_X: 0
            MAX_REL_X: 0
            MIN_REL_Y: 1.0
            MAX_REL_Y: 1.0
            MAX_CROP_H: 320
            MAX_CROP_W: 1248
        -   NAME: filter_truncated
            AREA_RATIO_THRESH: null
            AREA_2D_RATIO_THRESH: null
            GT_TRUNCATED_THRESH: 0.98

        -   NAME: random_world_rotation
            WORLD_ROT_ANGLE: [-0.3927, 0.3927]

        -   NAME: random_world_scaling
            WORLD_SCALE_RANGE: [0.95, 1.05]


    DATA_PROCESSOR:
        - NAME: mask_points_and_boxes_outside_range
          REMOVE_OUTSIDE_BOXES: True

        - NAME: shuffle_points
          SHUFFLE_ENABLED: {
              'train': True,
              'test': False
          }

        - NAME: transform_points_to_voxels
          VOXEL_SIZE: [0.05, 0.05, 0.1]
          MAX_POINTS_PER_VOXEL: 5
          MAX_NUMBER_OF_VOXELS: {
              'train': 16000,
              'test': 40000
          }

MODEL:
    NAME: multi_modal
    SYNC_BN: True

    LIDAR_MODEL:
        NAME: VoxelRCNN
        RETURN_BATCH_DICT: True
        RETURN_SPARSE_DICT: False
        PRETRAINED_MODEL: './ckpt/voxel_rcnn_stereodata_lidaraug_nofiltertruncated_normoverlapped_limitvoxel_80ep.pth'
        
        REQUIRES_GRAD: True

        VFE:
            NAME: MeanVFE
        BACKBONE_3D:
            NAME: VoxelBackBone4x
        MAP_TO_BEV:
            NAME: HeightCompression
            NUM_BEV_FEATURES: 160
        BACKBONE_2D:
            NAME: HgBEVBackbone
            num_channels: 64
            GN: False

    BACKBONE_3D:
        NAME: MMBackbone
        sparse_merge: False
        pre_merge_dropout: False
        pre_merge_dropout_ratio: 0.5
        backbone_merge: 'volume'
        merge_volume_grad: False
        pooled_volume_merge: True
        maxdisp: 288
        downsample_disp: 4
        GN: &gn False
        cat_img_feature: &cat_img_feature True
        add_img_feature: &add_img_feature False
        cat_right_img_feature: &cat_right_img_feature True
        voxel_occupancy: False
        front_surface_depth: True
        num_3dconvs: 1
        num_3dconvs_hg: 1
        drop_psv_loss: True
        drop_psv: &drop_psv True
        squeeze_geo: True
        geometry_volume_shift: 1
        inv_geometry_volume: True
        inv_psv: True
        inv_smooth_psv: 0.1
        inv_smooth_geo: 0.1
        feature_backbone:
            type: 'ResNet'
            depth: 18
            num_stages: 2
            out_indices: [0, 1]
            frozen_stages: -1 
            norm_cfg:
                type: 'BN'
                requires_grad: True
            norm_eval: False  # sem: True
            style: 'pytorch'
            with_max_pool: False
            deep_stem: True
            block_with_final_relu: False  # sem: True
            base_channels: 32
            strides: [1, 2]  # sem [1, 2, 2, 2]
            dilations: [1, 1]  # sem [1, 1, 1, 1]
            out_indices: [0, 1]
            num_channels_factor: [1, 1]  # sem [1, 2, 4, 8]
        # if using pt, set base=64, BN, frozen_stages=1, norm_eval=True, with_max_pool?, block_with_final_relu: True
        feature_backbone_pretrained: 'torchvision://resnet18'
        feature_neck:
            GN: *gn
            in_dims: [3, 32, 32]  # there is a hidden [3]
            start_level: 2
            stereo_dim: [32, 16]
            with_upconv: True
            with_upconv_voxel: True
            cat_img_feature: *cat_img_feature
            cat_right_img_feature: *cat_right_img_feature
            sem_dim: [32, 16]
            drop_psv: *drop_psv
            with_sem_neck: False
            with_spp: True
            extra_sem: True
        sem_neck:
            type: 'FPN'
            in_channels: [16]
            out_channels: 32  # TODO
            start_level: 0
            add_extra_convs: 'on_output'
            num_outs: 5
        cost_volume: [{type: "concat", downsample: 4}]
        cv_dim: 16
        rpn3d_dim: 32
        pre_img_merge_convs: False
        downsampled_depth_offset: 0.5
        use_stereo_out_type: "feature"
        num_hg: 0
    DENSE_HEAD_2D:
        NAME: 'MMDet2DHead'
        use_3d_center: True
        cfg:
            type: 'ATSSAdvHead'
            norm_cfg:
                type: 'BN'
                requires_grad: True
            reg_class_agnostic: False  # check True/False which one is better
            seperate_extra_reg_branch: False  # True may be better
            num_classes: 3
            in_channels: 32
            stacked_convs: 4
            feat_channels: 32
            anchor_generator:
                type: 'AnchorGenerator'
                ratios: [1.0]
                octave_base_scale: 16
                scales_per_octave: 1
                strides: [4, 8, 16, 32, 64]
            num_extra_reg_channel: &num_extra_reg_channel 0  # None: 0, hwl: 3, hwl+roty: 5, hwl+roty+alpha: 7
            bbox_coder:
                type: 'DeltaXYWHBBoxCoder'
                target_means: [.0, .0, .0, .0]
                target_stds: [0.1, 0.1, 0.2, 0.2]
            loss_cls:
                type: 'FocalLoss'
                use_sigmoid: True
                gamma: 2.0
                alpha: 0.25
                loss_weight: 1.0
            loss_bbox:
                type: 'GIoULoss'
                loss_weight: 2.0
            loss_centerness: 
                type: 'CrossEntropyLoss'
                use_sigmoid: True
                loss_weight: 1.0
            train_cfg:
                assigner:
                    type: 'ATSS3DCenterAssigner'
                    topk: 9
                    # thresh_mode: 'ratio'
                    # thresh_ratio: 0.75
                allowed_border: -1
                pos_weight: -1
                append_3d_centers: True
                debug: False
            test_cfg: 
                nms_pre: 1000
                min_bbox_size: 0
                score_thr: 0.05
                nms:
                    type: 'nms'
                    iou_threshold: 0.6
                max_per_img: 100
    MAP_TO_BEV:
        NAME: HeightCompression
        NUM_BEV_FEATURES: 160  # 32 * 5
        SPARSE_INPUT: False

    BACKBONE_2D:
        NAME: MMHgBEVBackbone
        num_channels: 64
        GN: *gn

    DENSE_HEAD:
        NAME: DetHead
        NUM_CONVS: 2
        GN: *gn
        CLASS_AGNOSTIC: False
        USE_DIRECTION_CLASSIFIER: True
        DIR_OFFSET: 0.78539
        DIR_LIMIT_OFFSET: 0.0
        NUM_DIR_BINS: 2
        CLAMP_VALUE: 10.0
        xyz_for_angles: True
        hwl_for_angles: True
        do_feature_imitation: False

        ANCHOR_GENERATOR_CONFIG: [
            {
                'class_name': 'Car',
                'anchor_sizes': [[3.9, 1.6, 1.56]],  # LWH  
                'anchor_rotations': [0, 1.57],
                'anchor_bottom_heights': [-1.78],  # TODO: -0.825
                'align_center': False,
                'feature_map_stride': 1,
                'matched_threshold': 0.6,
                'unmatched_threshold': 0.45
            },
            {
                'class_name': 'Pedestrian',
                'anchor_sizes': [[0.8, 0.6, 1.73]],  # LWH 
                'anchor_rotations': [0, 1.57],
                'anchor_bottom_heights': [-0.6],  # -0.74
                'align_center': False,
                'feature_map_stride': 1,
                'matched_threshold': 0.5,
                'unmatched_threshold': 0.35
            },
            {
                'class_name': 'Cyclist',
                'anchor_sizes': [[1.76, 0.6, 1.73]],  # LWH
                'anchor_rotations': [0, 1.57],
                'anchor_bottom_heights': [-0.6],  # -0.74
                'align_center': False,
                'feature_map_stride': 1,
                'matched_threshold': 0.5,
                'unmatched_threshold': 0.35
            }
        ]

        TARGET_ASSIGNER_CONFIG:
            NAME: AxisAlignedTargetAssigner
            POS_FRACTION: -1.0
            SAMPLE_SIZE: 512
            NORM_BY_NUM_EXAMPLES: False
            MATCH_HEIGHT: False
            BOX_CODER: ResidualCoder
            BOX_CODER_CONFIG:
                div_by_diagonal: True
                use_corners: False
                use_tanh: False

        LOSS_CONFIG:
            REG_LOSS_TYPE: 'WeightedSmoothL1Loss'
            IOU_LOSS_TYPE: 'IOU3dLoss'
            IMITATION_LOSS_TYPE: 'WeightedL2WithSigmaLoss'
            LOSS_WEIGHTS: {
                'cls_weight': 1.0,
                'loc_weight': 0.5,
                'dir_weight': 0.2,
                'iou_weight': 1.0,
                'imitation_weight': 1.0,
                'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
            }
    
    DEPTH_LOSS_HEAD:
        LOSS_TYPE: {'ce': 1.0}
        WEIGHTS: [1.0]  # [1.0, 1.0]
        stat_depth: False

    # VOXEL_LOSS_HEAD:
    #     # LOSS_TYPE: 'bce_loss'
    #     # WEIGHTS: 10.
    #     LOSS_TYPE: 'sigmoid_focal_loss'
    #     WEIGHTS: 1.

    ROI_HEAD:
        NAME: BEVRCNNHead
        CLASS_AGNOSTIC: True

        SHARED_FC: [256, 256]
        CLS_FC: [256, 256]
        REG_FC: [256, 256]
        DP_RATIO: 0.3

        NMS_CONFIG:
            TRAIN:
                NMS_TYPE: nms_gpu
                MULTI_CLASSES_NMS: False
                NMS_PRE_MAXSIZE: 9000
                NMS_POST_MAXSIZE: 512
                NMS_THRESH: 0.8
            TEST:
                NMS_TYPE: nms_gpu
                MULTI_CLASSES_NMS: False
                USE_FAST_NMS: False
                SCORE_THRESH: 0.0
                NMS_PRE_MAXSIZE: 2048
                NMS_POST_MAXSIZE: 100
                NMS_THRESH: 0.7

        ROI_GRID_POOL:
            FEATURES_SOURCE: ['stereo']
            PRE_MLP: True
            GRID_SIZE: 6
            POOL_LAYERS:
                stereo:
                    MLPS: [[32, 32]]
                    QUERY_RANGES: [[4, 4, 4]]
                    POOL_RADIUS: [0.4]
                    NSAMPLE: [16]
                    POOL_METHOD: max_pool
        TARGET_CONFIG:
            BOX_CODER: ResidualCoder
            ROI_PER_IMAGE: 128
            FG_RATIO: 0.5

            SAMPLE_ROI_BY_EACH_CLASS: True
            CLS_SCORE_TYPE: roi_iou

            CLS_FG_THRESH: 0.75
            CLS_BG_THRESH: 0.25
            CLS_BG_THRESH_LO: 0.1
            HARD_BG_RATIO: 0.8

            REG_FG_THRESH: 0.55

        LOSS_CONFIG:
            CLS_LOSS: BinaryCrossEntropy
            REG_LOSS: smooth-l1
            CORNER_LOSS_REGULARIZATION: True
            GRID_3D_IOU_LOSS: False
            LOSS_WEIGHTS: {
                'rcnn_cls_weight': 1.0,
                'rcnn_reg_weight': 1.0,
                'rcnn_corner_weight': 1.0,
                'rcnn_iou3d_weight': 1.0,
                'code_weights': [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
            }

    POST_PROCESSING:
        RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
        SCORE_THRESH: 0.1
        OUTPUT_RAW_SCORE: False

        EVAL_METRIC: kitti

        NMS_CONFIG:
            MULTI_CLASSES_NMS: True
            NMS_TYPE: nms_gpu
            NMS_THRESH: 0.25
            NMS_PRE_MAXSIZE: 4096
            NMS_POST_MAXSIZE: 500


OPTIMIZATION:
    BATCH_SIZE_PER_GPU: 1
    NUM_EPOCHS: 60

    OPTIMIZER: adamw
    LR: 0.001
    WEIGHT_DECAY: 0.0001
    MOMENTUM: 0.9

    PER_PARAMETER_CFG:
        - START_WITH: 'lidar_model'
          MUL_LR: 1.
        - START_WITH: 'others'
          MUL_LR: 1.

    # MOMS: [0.95, 0.85]
    # PCT_START: 0.4
    DIV_FACTOR: 10
    DECAY_STEP_LIST: [50]
    LR_DECAY: 0.1
    LR_CLIP: 0.0000001

    LR_WARMUP: True
    WARMUP_EPOCH: 1

    GRAD_NORM_CLIP: 10
